const mongoose = require('mongoose');

const vulnerabilitySchema = new mongoose.Schema(
  {
    cve: {
      type: String,
      required: true,
      index: true,
    },
    severity: {
      type: String,
      enum: ['critical', 'high', 'medium', 'low'],
      required: true,
      index: true,
    },
    cvss: {
      type: Number,
      min: 0,
      max: 10,
    },
    status: {
      type: String,
      index: true,
    },
    cause: String,
    description: {
      type: String,
      required: true,
    },
    vecStr: String,
    exploit: String,
    riskFactors: {
      type: Map,
      of: mongoose.Schema.Types.Mixed,
    },
    link: String,
    type: String,
    packageName: {
      type: String,
      index: true,
    },
    packageVersion: String,
    packageType: String,
    layerTime: Date,
    published: Date,
    fixDate: {
      type: Date,
      index: true,
    },
    applicableRules: [String],
    owner: String,
    advisoryType: String,
    path: String,
  },
  {
    timestamps: true,
  }
);

// Indexes for better query performance
vulnerabilitySchema.index({ severity: 1, published: -1 });
vulnerabilitySchema.index({ packageName: 1, severity: 1 });
vulnerabilitySchema.index({ status: 1, fixDate: -1 });

const Vulnerability = mongoose.model('Vulnerability', vulnerabilitySchema);

module.exports = Vulnerability;
